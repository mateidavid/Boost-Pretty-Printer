GNU gdb (Ubuntu 7.7-0ubuntu3.1) 7.7
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from test-multi-index...done.
Breakpoint 1 at 0x4009af: file test-multi-index.cpp, line 18.

Breakpoint 1, done () at test-multi-index.cpp:18
18	    return 0;
$1 = boost::multi_index_container<int, indexed_by<sequenced<>, ordered_unique<identity<int>>, random_access<>, ordered_non_unique<global_fun<int, int, negative>>, hashed_non_unique<identity<int>>>>[idx=0] = {[0x60b250] = 1, [0x60b340] = 5, [0x60b3a0] = 17, [0x60b400] = 4, [0x60b460] = 14, [0x60b4c0] = 3, [0x60b520] = 9}
$2 = boost::multi_index_container<int, indexed_by<sequenced<>, ordered_unique<identity<int>>, random_access<>, ordered_non_unique<global_fun<int, int, negative>>, hashed_non_unique<identity<int>>>>[idx=1] = {[0x60b250] = 1, [0x60b4c0] = 3, [0x60b400] = 4, [0x60b340] = 5, [0x60b520] = 9, [0x60b460] = 14, [0x60b3a0] = 17}
$3 = boost::multi_index_container<int, indexed_by<sequenced<>, ordered_unique<identity<int>>, random_access<>, ordered_non_unique<global_fun<int, int, negative>>, hashed_non_unique<identity<int>>>>[idx=2] = {boost::multi_index::random_access = printer not implemented}
$4 = boost::multi_index_container<int, indexed_by<sequenced<>, ordered_unique<identity<int>>, random_access<>, ordered_non_unique<global_fun<int, int, negative>>, hashed_non_unique<identity<int>>>>[idx=3] = {[0x60b3a0] = 17, [0x60b460] = 14, [0x60b520] = 9, [0x60b340] = 5, [0x60b400] = 4, [0x60b4c0] = 3, [0x60b250] = 1}
$5 = boost::multi_index_container<int, indexed_by<sequenced<>, ordered_unique<identity<int>>, random_access<>, ordered_non_unique<global_fun<int, int, negative>>, hashed_non_unique<identity<int>>>>[idx=4] = {boost::multi_index::hashed_non_unique = printer not implemented}
A debugging session is active.

	Inferior 1 [process 30780] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]

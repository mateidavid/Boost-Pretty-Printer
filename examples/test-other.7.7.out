GNU gdb (Ubuntu 7.7-0ubuntu3.1) 7.7
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from test-other...done.
Breakpoint 1 at 0x401631: file test-other.cpp, line 101.

Breakpoint 1, done () at test-other.cpp:101
101	    return 0;
$1 = boost::iterator_range<char*> of length 0
$2 = boost::iterator_range<char*> of length 2 = {108 'l', 108 'l'}
$3 = boost::optional<int> is not initialized
$4 = boost::optional<char*> is initialized
$5 = (boost::reference_wrapper<int>) 42
$6 = (boost::logic::tribool) false
$7 = (boost::logic::tribool) indeterminate
$8 = (boost::scoped_ptr<int>) 0x0
$9 = (boost::scoped_ptr<int>) 0x617010
$10 = (boost::shared_ptr<int>) 0x0
$11 = (boost::shared_ptr<int>) (count 1, weak count 1) 0x617030
$12 = boost::circular_buffer<int, std::allocator<int> > of length 0/0
$13 = boost::circular_buffer<int, std::allocator<int> > of length 2/3 = {1, 4}
$14 = {0x0, 0x0, 0x0}
$15 = {0, 1, 2, 0, 0}
$16 = (boost::variant<...>) which (0) = int value = 0
$17 = (boost::variant<...>) which (1) = int value = 42
$18 = (boost::uuids::uuid) 00000000-0000-0000-0000-000000000000
$19 = (boost::uuids::uuid) 01234567-89ab-cdef-0123-456789abcdef
$20 = {<boost::intrusive::set_impl<boost::intrusive::bhtraits<MyClass, boost::intrusive::rbtree_node_traits<void*, true>, (boost::intrusive::link_mode_type)1, boost::intrusive::default_tag, 3u>, void, unsigned long, true>> = {<boost::intrusive::bstree_impl<boost::intrusive::bhtraits<MyClass, boost::intrusive::rbtree_node_traits<void*, true>, (boost::intrusive::link_mode_type)1, boost::intrusive::default_tag, 3u>, void, unsigned long, true, (boost::intrusive::algo_types)4>> = {<boost::intrusive::bstbase<boost::intrusive::bhtraits<MyClass, boost::intrusive::rbtree_node_traits<void*, true>, (boost::intrusive::link_mode_type)1, boost::intrusive::default_tag, 3u>, void, true, unsigned long, (boost::intrusive::algo_types)4>> = {<boost::intrusive::detail::size_holder<true, unsigned long, void>> = {static constant_time_size = <optimized out>, size_ = 0}, <boost::intrusive::bstbase2<boost::intrusive::bhtraits<MyClass, boost::intrusive::rbtree_node_traits<void*, true>, (boost::intrusive::link_mode_type)1, boost::intrusive::default_tag, 3u>, void, (boost::intrusive::algo_types)4>> = {<boost::intrusive::bstbase3<boost::intrusive::bhtraits<MyClass, boost::intrusive::rbtree_node_traits<void*, true>, (boost::intrusive::link_mode_type)1, boost::intrusive::default_tag, 3u>, (boost::intrusive::algo_types)4>> = {<boost::intrusive::compact_rbtree_node<void*>> = {parent_ = 0x0, left_ = 0x6165c8 <v_intrusive_set_1+8>, right_ = 0x6165c8 <v_intrusive_set_1+8>}, <boost::intrusive::bhtraits<MyClass, boost::intrusive::rbtree_node_traits<void*, true>, (boost::intrusive::link_mode_type)1, boost::intrusive::default_tag, 3u>> = {<boost::intrusive::bhtraits_base<MyClass, boost::intrusive::compact_rbtree_node<void*>*, boost::intrusive::default_tag, 3u>> = {<No data fields>}, static link_mode = <optimized out>}, static external_value_traits = <optimized out>, static safemode_or_autounlink = <optimized out>, static stateful_value_traits = <optimized out>}, <boost::intrusive::detail::ebo_functor_holder<std::less<MyClass> >> = {<boost::intrusive::detail::ebo_functor_holder_impl<std::less<MyClass>, false>> = {<std::less<MyClass>> = {<std::binary_function<MyClass, MyClass, bool>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <boost::intrusive::detail::clear_on_destructor_base<boost::intrusive::bstree_impl<boost::intrusive::bhtraits<MyClass, boost::intrusive::rbtree_node_traits<void*, true>, (boost::intrusive::link_mode_type)1, boost::intrusive::default_tag, 3u>, void, unsigned long, true, (boost::intrusive::algo_types)4>, true>> = {<No data fields>}, static external_value_traits = <optimized out>, static constant_time_size = true, static stateful_value_traits = <optimized out>, static safemode_or_autounlink = <optimized out>}, static constant_time_size = true}, <No data fields>}
$21 = {<boost::intrusive::set_impl<boost::intrusive::bhtraits<MyClass, boost::intrusive::rbtree_node_traits<void*, true>, (boost::intrusive::link_mode_type)1, boost::intrusive::default_tag, 3u>, void, unsigned long, true>> = {<boost::intrusive::bstree_impl<boost::intrusive::bhtraits<MyClass, boost::intrusive::rbtree_node_traits<void*, true>, (boost::intrusive::link_mode_type)1, boost::intrusive::default_tag, 3u>, void, unsigned long, true, (boost::intrusive::algo_types)4>> = {<boost::intrusive::bstbase<boost::intrusive::bhtraits<MyClass, boost::intrusive::rbtree_node_traits<void*, true>, (boost::intrusive::link_mode_type)1, boost::intrusive::default_tag, 3u>, void, true, unsigned long, (boost::intrusive::algo_types)4>> = {<boost::intrusive::detail::size_holder<true, unsigned long, void>> = {static constant_time_size = <optimized out>, size_ = 1}, <boost::intrusive::bstbase2<boost::intrusive::bhtraits<MyClass, boost::intrusive::rbtree_node_traits<void*, true>, (boost::intrusive::link_mode_type)1, boost::intrusive::default_tag, 3u>, void, (boost::intrusive::algo_types)4>> = {<boost::intrusive::bstbase3<boost::intrusive::bhtraits<MyClass, boost::intrusive::rbtree_node_traits<void*, true>, (boost::intrusive::link_mode_type)1, boost::intrusive::default_tag, 3u>, (boost::intrusive::algo_types)4>> = {<boost::intrusive::compact_rbtree_node<void*>> = {parent_ = 0x7fffffffd4c0, left_ = 0x7fffffffd4c0, right_ = 0x7fffffffd4c0}, <boost::intrusive::bhtraits<MyClass, boost::intrusive::rbtree_node_traits<void*, true>, (boost::intrusive::link_mode_type)1, boost::intrusive::default_tag, 3u>> = {<boost::intrusive::bhtraits_base<MyClass, boost::intrusive::compact_rbtree_node<void*>*, boost::intrusive::default_tag, 3u>> = {<No data fields>}, static link_mode = <optimized out>}, static external_value_traits = <optimized out>, static safemode_or_autounlink = <optimized out>, static stateful_value_traits = <optimized out>}, <boost::intrusive::detail::ebo_functor_holder<std::less<MyClass> >> = {<boost::intrusive::detail::ebo_functor_holder_impl<std::less<MyClass>, false>> = {<std::less<MyClass>> = {<std::binary_function<MyClass, MyClass, bool>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <boost::intrusive::detail::clear_on_destructor_base<boost::intrusive::bstree_impl<boost::intrusive::bhtraits<MyClass, boost::intrusive::rbtree_node_traits<void*, true>, (boost::intrusive::link_mode_type)1, boost::intrusive::default_tag, 3u>, void, unsigned long, true, (boost::intrusive::algo_types)4>, true>> = {<No data fields>}, static external_value_traits = <optimized out>, static constant_time_size = true, static stateful_value_traits = <optimized out>, static safemode_or_autounlink = <optimized out>}, static constant_time_size = true}, <No data fields>}
$22 = {<boost::intrusive::list_impl<boost::intrusive::bhtraits<MyClass_list, boost::intrusive::list_node_traits<void*>, (boost::intrusive::link_mode_type)1, boost::intrusive::default_tag, 1u>, unsigned long, true>> = {<boost::intrusive::detail::clear_on_destructor_base<boost::intrusive::list_impl<boost::intrusive::bhtraits<MyClass_list, boost::intrusive::list_node_traits<void*>, (boost::intrusive::link_mode_type)1, boost::intrusive::default_tag, 1u>, unsigned long, true>, true>> = {<No data fields>}, static external_value_traits = <optimized out>, static constant_time_size = true, static stateful_value_traits = <optimized out>, static safemode_or_autounlink = <optimized out>, data_ = {<boost::intrusive::bhtraits<MyClass_list, boost::intrusive::list_node_traits<void*>, (boost::intrusive::link_mode_type)1, boost::intrusive::default_tag, 1u>> = {<boost::intrusive::bhtraits_base<MyClass_list, boost::intrusive::list_node<void*>*, boost::intrusive::default_tag, 1u>> = {<No data fields>}, static link_mode = <optimized out>}, root_plus_size_ = {<boost::intrusive::detail::size_holder<true, unsigned long, void>> = {static constant_time_size = <optimized out>, size_ = 0}, root_ = {next_ = 0x616608 <v_intrusive_list_1+8>, prev_ = 0x616608 <v_intrusive_list_1+8>}}}}, <No data fields>}
$23 = {<boost::intrusive::list_impl<boost::intrusive::bhtraits<MyClass_list, boost::intrusive::list_node_traits<void*>, (boost::intrusive::link_mode_type)1, boost::intrusive::default_tag, 1u>, unsigned long, true>> = {<boost::intrusive::detail::clear_on_destructor_base<boost::intrusive::list_impl<boost::intrusive::bhtraits<MyClass_list, boost::intrusive::list_node_traits<void*>, (boost::intrusive::link_mode_type)1, boost::intrusive::default_tag, 1u>, unsigned long, true>, true>> = {<No data fields>}, static external_value_traits = <optimized out>, static constant_time_size = true, static stateful_value_traits = <optimized out>, static safemode_or_autounlink = <optimized out>, data_ = {<boost::intrusive::bhtraits<MyClass_list, boost::intrusive::list_node_traits<void*>, (boost::intrusive::link_mode_type)1, boost::intrusive::default_tag, 1u>> = {<boost::intrusive::bhtraits_base<MyClass_list, boost::intrusive::list_node<void*>*, boost::intrusive::default_tag, 1u>> = {<No data fields>}, static link_mode = <optimized out>}, root_plus_size_ = {<boost::intrusive::detail::size_holder<true, unsigned long, void>> = {static constant_time_size = <optimized out>, size_ = 1}, root_ = {next_ = 0x7fffffffd490, prev_ = 0x7fffffffd490}}}}, <No data fields>}
$24 = (boost::gregorian::date) uninitialized
$25 = (boost::gregorian::date) 2014-03-00
$26 = (boost::posix_time::ptime) uninitialized
$27 = (boost::posix_time::ptime) 212272376400000000
A debugging session is active.

	Inferior 1 [process 6947] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
